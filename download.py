import requests
import json
import time
import os
import re


class Download:
    def __init__(self, video_id="", pwd=""):
        self.video_id = video_id
        self.pwd = pwd
        self.video_title = ""
        self.videoUrl = "https://www.youtube.com/watch?v={video_id}"
        self.apiCaptionsUrl = "https://api.zhuwei.me/v1/captions/{video_id}?api-key={api_key}"
        self.apiContentsUrl = \
            "https://api.zhuwei.me/v1/captions/{video_id}/contents/{language}?" \
            "api-key={api_key}&multilanguage=multilanguage"
        self.api_key = "a2d09c7d76fced01f8be4b1f4cce8bec"
        self.caption = {}
        self.contents = {}

    def display(self, info):
        line = "[{time}]{info}".format(time=time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()), info=info)
        print(line)
        with open("youtube.log", "a") as f:
            f.write(line + "\n")

    def downloadcaption(self):
        # download video info
        self.display("downloading caption info for {video_id}".format(video_id=self.video_id))
        response = requests.get(self.apiCaptionsUrl.format(video_id=self.video_id, api_key=self.api_key))
        self.caption = json.loads(response.text)

        # download caption content
        if self.caption["meta"]["code"] == 200:
            self.display("downloading caption for {video_id}".format(video_id=self.video_id))
            language = ""
            for caption in self.caption["response"]["captions"]["available_captions"]:
                if caption["language"] == "en":
                    language = "en"
                    if caption["autogenerated"]:
                        language += "-auto"
            if not language:
                if self.caption["response"]["captions"]["available_captions"][0]["autogenerated"]:
                    language = self.caption["response"]["captions"]["available_captions"][0]["language"] + "-auto"
                else:
                    language = self.caption["response"]["captions"]["available_captions"][0]["language"]
            response = requests.get(self.apiContentsUrl.format(
                video_id=self.video_id,
                language=language,
                api_key=self.api_key))
            self.contents = json.loads(response.text)

            # save caption as .srt file
            self.display("saving caption for {video_id}".format(video_id=self.video_id))
            self.video_title = re.sub(r"[/\\]", " ", self.caption["response"]["captions"]["title"])
            filepath = os.path.join(os.getcwd(), self.pwd, self.video_title + ".srt")
            # os.path.join(self.pwd, self.caption["response"]["captions"]["title"] + ".srt")
            with open(filepath, mode="w", encoding='UTF-8') as f:
                f.write(re.sub("&#39;", "'", self.contents["contents"]["content"]))
        else:
            self.display("no caption found for {video_id}".format(video_id=self.video_id))

    def downloadvideo(self):
        self.display("downloading VIDEO for {video_id}".format(video_id=self.video_id))
        if self.video_title:
            filepath = os.path.join(os.getcwd(), self.pwd, self.video_title + ".mp4")
            cmd = "youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' " \
                  "--merge-output-format mp4 --external-downloader aria2c --external-downloader-args '-x 16 -k 1M' " \
                  "--merge-output-format mp4  -o '{path}' {url}" \
                  "".format(path=filepath, url=self.videoUrl.format(video_id=self.video_id))
            os.system(cmd)
        else:
            cmd = "youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' " \
                  "--merge-output-format mp4   {url}" \
                  "".format(url=self.videoUrl.format(video_id=self.video_id))
            os.system(cmd)

    def main(self):
        if self.video_id:
            self.downloadcaption()
            self.downloadvideo()


if __name__ == '__main__':
    download = Download()
    download.main()
